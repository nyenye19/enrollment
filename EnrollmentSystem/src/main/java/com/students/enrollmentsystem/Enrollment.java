/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.students.enrollmentsystem;

import com.mongodb.MongoClient;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import static com.mongodb.client.model.Filters.eq;
import com.mongodb.client.model.Updates;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import org.bson.Document;
import org.bson.conversions.Bson;

/**
 *
 * @author Lenovo
 */
public class Enrollment extends javax.swing.JFrame {

    //Creating a MongoDB client
    MongoClient mongo;
    //Connecting to the database
    MongoDatabase database;

    /**
     * Creates new form Enrollment
     */
    public Enrollment() {
        initComponents();

        //Creating a MongoDB client
        mongo = new MongoClient("localhost", 27017);
        //Connecting to the database
        database = mongo.getDatabase("db1");

        //Creating a collection
        database.createCollection("enrollments");
        database.createCollection("students");
        database.createCollection("schedules");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        txtFullname = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtEnrollId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstStudentList = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        btnSave1 = new javax.swing.JButton();
        pnlSchedule = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtScheduleId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboTime = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboRoom = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtTeacher = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("StudentId:");

        jLabel2.setText("StudentName:");

        txtStudentId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStudentIdKeyPressed(evt);
            }
        });

        txtFullname.setEditable(false);

        btnSave.setBackground(new java.awt.Color(0, 153, 0));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Enroll Student");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(204, 0, 0));
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel3.setText("Enrollment Id");

        txtEnrollId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEnrollIdKeyPressed(evt);
            }
        });

        lstStudentList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstStudentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstStudentListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstStudentList);

        jLabel8.setText("Student List");

        btnSave1.setBackground(new java.awt.Color(0, 153, 0));
        btnSave1.setForeground(new java.awt.Color(255, 255, 255));
        btnSave1.setText("UnEnroll Student");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        pnlSchedule.setName(""); // NOI18N

        jLabel4.setText("Schedule Id:");

        txtScheduleId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtScheduleIdActionPerformed(evt);
            }
        });
        txtScheduleId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtScheduleIdKeyPressed(evt);
            }
        });

        jLabel5.setText("Time:");

        cboTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "07:00 am to 08:30 am", "08:30 am to 10:00 am", "10:30 am to 12:00 pm", "01:00 pm to 02:30 pm", "02:30 pm to 04:00 pm", "04:00 pm to 05:00 pm" }));
        cboTime.setSelectedIndex(-1);

        jLabel6.setText("Room:");

        cboRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Room 100", "Room 105", "Room 110", "Room 115", "Room 120", "Room 125", "Room 200" }));
        cboRoom.setSelectedIndex(-1);

        jLabel7.setText("Teacher");

        javax.swing.GroupLayout pnlScheduleLayout = new javax.swing.GroupLayout(pnlSchedule);
        pnlSchedule.setLayout(pnlScheduleLayout);
        pnlScheduleLayout.setHorizontalGroup(
            pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(81, 81, 81)
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTeacher)
                    .addComponent(txtScheduleId)
                    .addComponent(cboRoom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboTime, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlScheduleLayout.setVerticalGroup(
            pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4))
                    .addComponent(txtScheduleId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel5))
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cboRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addComponent(txtTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel9.setText("Schedule");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEnrollId, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSave)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(btnSave1)
                                .addGap(99, 99, 99)
                                .addComponent(btnCancel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                .addGap(173, 173, 173)))))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEnrollId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel)
                    .addComponent(btnSave1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        Document document = new Document();
        String EnrollmentId = txtEnrollId.getText();
        String ScheduleId = txtScheduleId.getText();
        String StudentId = txtStudentId.getText();
        if(ScheduleId.isEmpty()){
            JOptionPane.showMessageDialog(null, "Schedule is required!");
            return;
        }
        
        if (this.getTitle().compareTo("Enroll Student") == 0) {
            document.append("enrollid", EnrollmentId);
            document.append("schedid", ScheduleId);
            document.append("studid", StudentId);

            database.getCollection("enrollments").insertOne(document);
//        } else if (this.getTitle().compareTo("UnEnroll Student") == 0) {
//            database.getCollection("enrollments").deleteOne(Filters.eq("enrollid", EnrollmentId));
        }

        JOptionPane.showMessageDialog(null, "Student enrollment saved");

        loadList();

    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtScheduleIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtScheduleIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtScheduleIdActionPerformed

    private void txtScheduleIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtScheduleIdKeyPressed
        //         TODO add your handling code here:
        if (evt.getKeyCode() == 10) {  //ENTER
            if (this.getTitle().compareTo("Enroll Student") == 0) {
                Document doc = database.getCollection("schedules").find(eq("schedid", txtScheduleId.getText())).first();
                cboRoom.setSelectedIndex(Integer.parseInt(doc.get("room").toString()));
                cboTime.setSelectedIndex(Integer.parseInt(doc.get("time").toString()));
                txtTeacher.setText(doc.get("teacher").toString());
            }
        }
    }//GEN-LAST:event_txtScheduleIdKeyPressed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtStudentIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStudentIdKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {  //ENTER
            if (this.getTitle().compareTo("Enroll Student") == 0) {
                Document doc = database.getCollection("students").find(eq("studid", txtStudentId.getText())).first();
                txtFullname.setText(doc.get("fullname").toString());

            }
        }

    }//GEN-LAST:event_txtStudentIdKeyPressed

    private boolean loadList() {
        FindIterable<Document> docEnrollment = database.getCollection("enrollments").find(eq("enrollid", txtEnrollId.getText()));

//        if(docEnrollment.first()==null){
//            JOptionPane.showMessageDialog(null, "No record found");
//            return false;
//        } 
        lstStudentList.removeAll();
        String ScheduleId = "";
        txtStudentId.setText("");
        txtFullname.setText("");
        txtScheduleId.setText("");
        cboRoom.setSelectedIndex(-1);
        cboTime.setSelectedIndex(-1);
        txtTeacher.setText("");
        
        DefaultListModel demoList = new DefaultListModel();
        for (Document doc : docEnrollment) {
            String StudentId = doc.get("studid").toString();
            Document docStudent = database.getCollection("students").find(eq("studid", StudentId)).first();
            demoList.addElement(StudentId + " - " + docStudent.get("fullname").toString());
            ScheduleId = doc.get("schedid").toString();
        }
        lstStudentList.setModel(demoList);

        boolean flag = ScheduleId.isEmpty();
        txtScheduleId.setEnabled(flag);
        cboRoom.setEnabled(flag);
        cboTime.setEnabled(flag);
        txtTeacher.setEnabled(flag);

        Document docSchedule = database.getCollection("schedules").find(eq("schedid", ScheduleId)).first();
        txtScheduleId.setText(docSchedule.get("schedid").toString());
        cboRoom.setSelectedIndex(Integer.parseInt(docSchedule.get("room").toString()));
        cboTime.setSelectedIndex(Integer.parseInt(docSchedule.get("time").toString()));
        txtTeacher.setText(docSchedule.get("teacher").toString());

        return !flag;
    }
    private void txtEnrollIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnrollIdKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == 10) {  //ENTER
            //enrollment
            loadList();

        }

    }//GEN-LAST:event_txtEnrollIdKeyPressed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        Document document = new Document();
        String EnrollmentId = txtEnrollId.getText();
        String ScheduleId = txtScheduleId.getText();
        String StudentId = txtStudentId.getText();

        Bson deletes = Filters.and(Filters.eq("enrollid", EnrollmentId),
                Filters.eq("studid", StudentId));

        database.getCollection("enrollments").deleteOne(deletes);

        JOptionPane.showMessageDialog(null, "Student enrollment saved");

        loadList();
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void lstStudentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstStudentListValueChanged
        // TODO add your handling code here:
        String[] row = lstStudentList.getSelectedValue().split("-");
        String StudentId = row[0].trim();
        Document docStudent = database.getCollection("students").find(eq("studid", StudentId)).first();
        txtStudentId.setText(docStudent.get("studid").toString());
        txtFullname.setText(docStudent.get("fullname").toString());

    }//GEN-LAST:event_lstStudentListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Enrollment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Enrollment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Enrollment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Enrollment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enrollment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave1;
    private javax.swing.JComboBox<String> cboRoom;
    private javax.swing.JComboBox<String> cboTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstStudentList;
    private javax.swing.JPanel pnlSchedule;
    private javax.swing.JTextField txtEnrollId;
    private javax.swing.JTextField txtFullname;
    private javax.swing.JTextField txtScheduleId;
    private javax.swing.JTextField txtStudentId;
    private javax.swing.JTextField txtTeacher;
    // End of variables declaration//GEN-END:variables
}
